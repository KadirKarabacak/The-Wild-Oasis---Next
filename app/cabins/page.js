import CabinList from "@/app/_components/CabinList";
import React from "react";
import Spinner from "@/app/_components/Spinner";
import Filter from "../_components/Filter";
import ReservationReminder from "../_components/ReservationReminder";

export const metadata = {
    title: "Cabins",
    description: "Generated by Next.js",
};

//: Updates Data Cache & Full Route Cache [ Commented out cuz of page is dynamic with searchParams ]
export const revalidate = 3600; // Seconds

// We able to read searchParams from URL in any page, each time searchParams are change, the page is re-rendering itself and child components
export default function Page({ searchParams }) {
    // Doin this makes cabins completly dynamic, so no ned to spesify revalidate
    const filter = searchParams?.capacity ?? "all";

    return (
        <div>
            <h1 className="text-4xl mb-5 text-accent-400 font-medium">
                Our Luxury Cabins
            </h1>
            {/* This paragraph is not async, so we must move it out of suspense to display it directly */}
            <p className="text-primary-200 text-lg mb-10">
                Cozy yet luxurious cabins, located right in the heart of the
                Italian Dolomites. Imagine waking up to beautiful mountain
                views, spending your days exploring the dark forests around, or
                just relaxing in your private hot tub under the stars. Enjoy
                nature's beauty in your own little home away from home. The
                perfect spot for a peaceful, calm vacation. Welcome to paradise.
            </p>
            <div className="flex justify-end mb-8">
                <Filter />
            </div>
            {/* Every navigation wrapped into transitions in NextJS, so we had to use key to spesify each time url changes display spinner */}
            <React.Suspense fallback={<Spinner />} key={filter}>
                <CabinList filter={filter} />
                <ReservationReminder />
            </React.Suspense>
        </div>
    );
}
